version: "3.1"

services:

  rabbitmq:
    image: rabbitmq:3.9.25-management-alpine
    container_name: "rabbitmq"
    restart: always
    ports:
      - 5672:5672
      - 15672:15672
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  cache:
    image: redis:6.2-bullseye
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --save 20 1 --loglevel warning --requirepass eYVX7EwVmmxKPCDmwMtyKVge8oLd2t81

  mongo-database:
    image: mongo:4.2.3-bionic
    container_name: mongo-database
    restart: always
    ports:
      - 27017:27017
    environment:
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./mongo-database/entrypoint:/docker-entrypoint-initdb.d
      - ./mongo-database-data:/data/db
      - ./mongo-database-config:/data/configdb
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

  courier-location-microservice:
    image: index.docker.io/msinancoskun/courier-location-microservice:latest
    container_name: "courier-location-microservice"
    restart: always
    depends_on:
      - rabbitmq
      - cache
      - mongo-database
    environment:
      MONGODB_URI: ${MONGODB_URI}
      NODE_ENV: ${NODE_ENV}
      AMQP_URL: "amqp://rabbitmq:5672"
      PORT: ${PORT}
      REDIS_URL: "redis://cache:6379"
    ports:
      - ${PORT}:3000
    logging:
      driver: "json-file"
      options:
        max-size: "1m"
        max-file: "1"

volumes:
  mongo-database: